상속
다른클래스의 특성들을 상속받음
자식클래스는 -부모의 멤버함수,변수 -부모의생성자와 소멸자 -자식이 고유로 추가한 멤버함수,변수 -자식고유의 생성자,소멸자 를 포함하고 있다.

class 자식클래스 이름 : 접근지정자  부모클래스 이름{
자식클래스 멤버 리스트
}

ex) class Taxi : public Mycar{
}

Student::Student(int id) : CPerson(name, age){
}
생성자 구현시 부모생성자를 먼저 호출
자료형 필요없음. 매개변수도 써야함 (안쓰면 매개변수가 없는 생성자를 호출함)
ㄴ 부모생성자를 언급 안하는 경우, 매개변수가 없는 부모생성자를 default로 호출

상속.cpp
부모클래스 먼저 생성 -> 자식클래스 먼저 소멸
FILO First In Last Out 구조

-----------------------------------------------------

멤버의 접근지정자 파생유형
public - public protected private
protected = protected protected private
private - private private private
---------------------------------------------------
다중상속
두개이상의 클래스로 부터 상속

문제점
상속받은 부모클래스에 같은 이름의 멤버가 존재한다면?
하나의클래스를 두번이상 상속 가능
프로그래밍리 복잡해쟈서 실용성 낮음

가급적이면 java의 인터페이스 형태로만 다중상속할 것

------------------------------------------------------
다형성
하나가 다양한 형태의 함수를 가지는 것
동일한 함수들이 다른 행동을 하는 것

정적바인딩
c++은 호출한 멤버함수가 정적(컴파일시간)으로 결정
동적바인딩
java는 호출할 멤버함수가 동적(실행시간)으로 가상함수테이블에 의해 결정

c++에서 virtual이라고 쓰면 동적으로 할당됨


override
안써도 되지만 쓰는게 좋음
override를 안쓰고 오타가 나면 따로 있는 메소드인줄 알고 새로만듬
오타 같은 실수를 방지하기 위해서 override키워드 사용(java의 @override와 같음) 


